/* Description and License
 * A Java library that wraps the functionality of the native image 
 * processing library OpenCV
 *
 * (c) Sigurdur Orn Adalgeirsson (siggi@alum.mit.edu)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General
 * Public License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA  02111-1307  USA
 */
 
package sj.opencv.jna.cxcore;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import sj.opencv.jna.cxcore.CxcoreLibrary.CvFileNodeHash;
/**
 * <i>native declaration : modules/core/include/opencv2/core/types_c.h:1920</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvFileNode extends Structure {
	public int tag;
	/**
	 * type information<br>
	 * (only for user-defined object, for others it is 0)<br>
	 * C type : CvTypeInfo*
	 */
	public sj.opencv.jna.cxcore.CvTypeInfo.ByReference info;
	/// C type : data_union
	public data_union data;
	/// <i>native declaration : modules/core/include/opencv2/core/types_c.h:1919</i>
	/// <i>native declaration : modules/core/include/opencv2/core/types_c.h:1919</i>
	public static class data_union extends Union {
		/// scalar floating-point number
		public double f;
		/// scalar integer number
		public int i;
		/**
		 * text string<br>
		 * C type : CvString
		 */
		public CvString str;
		/**
		 * sequence (ordered collection of file nodes)<br>
		 * C type : CvSeq*
		 */
		public sj.opencv.jna.cxcore.CvSeq.ByReference seq;
		/**
		 * map (collection of named file nodes)<br>
		 * C type : CvFileNodeHash*
		 */
		public CvFileNodeHash map;
		public data_union() {
			super();
		}
		/**
		 * @param map map (collection of named file nodes)<br>
		 * C type : CvFileNodeHash*
		 */
		public data_union(CvFileNodeHash map) {
			super();
			this.map = map;
			setType(CvFileNodeHash.class);
		}
		/// @param i scalar integer number
		public data_union(int i) {
			super();
			this.i = i;
			setType(Integer.TYPE);
		}
		/// @param f scalar floating-point number
		public data_union(double f) {
			super();
			this.f = f;
			setType(Double.TYPE);
		}
		/**
		 * @param seq sequence (ordered collection of file nodes)<br>
		 * C type : CvSeq*
		 */
		public data_union(sj.opencv.jna.cxcore.CvSeq.ByReference seq) {
			super();
			this.seq = seq;
			setType(sj.opencv.jna.cxcore.CvSeq.ByReference.class);
		}
		/**
		 * @param str text string<br>
		 * C type : CvString
		 */
		public data_union(CvString str) {
			super();
			this.str = str;
			setType(CvString.class);
		}
		public static class ByReference extends data_union implements Structure.ByReference {
			
		};
		public static class ByValue extends data_union implements Structure.ByValue {
			
		};
	};
	public CvFileNode() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"tag", "info", "data"});
	}
	/**
	 * @param info type information<br>
	 * (only for user-defined object, for others it is 0)<br>
	 * C type : CvTypeInfo*<br>
	 * @param data C type : data_union
	 */
	public CvFileNode(int tag, sj.opencv.jna.cxcore.CvTypeInfo.ByReference info, data_union data) {
		super();
		this.tag = tag;
		this.info = info;
		this.data = data;
		initFieldOrder();
	}
	public static class ByReference extends CvFileNode implements Structure.ByReference {
		
	};
	public static class ByValue extends CvFileNode implements Structure.ByValue {
		
	};
}
