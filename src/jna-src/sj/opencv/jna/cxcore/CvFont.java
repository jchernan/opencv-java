/* Description and License
 * A Java library that wraps the functionality of the native image 
 * processing library OpenCV
 *
 * (c) Sigurdur Orn Adalgeirsson (siggi@alum.mit.edu)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General
 * Public License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA  02111-1307  USA
 */
 
package sj.opencv.jna.cxcore;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
/**
 * <i>native declaration : modules/core/include/opencv2/core/core_c.h:3227</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvFont extends Structure {
	/**
	 * Qt:nameFont<br>
	 * C type : const char*
	 */
	public Pointer nameFont;
	/**
	 * Qt:ColorFont -> cvScalar(blue_component, green_component, red\_component[, alpha_component])<br>
	 * C type : CvScalar
	 */
	public CvScalar color;
	/// Qt: bool italic         /* =CV_FONT_* * /
	public int font_face;
	/**
	 * font data and metrics<br>
	 * C type : const int*
	 */
	public IntByReference ascii;
	/// C type : const int*
	public IntByReference greek;
	/// C type : const int*
	public IntByReference cyrillic;
	public float hscale;
	public float vscale;
	/// slope coefficient: 0 - normal, >0 - italic
	public float shear;
	/// Qt: weight               /* letters thickness * /
	public int thickness;
	/// horizontal interval between letters
	public float dx;
	/// Qt: PointSize
	public int line_type;
	public CvFont() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"nameFont", "color", "font_face", "ascii", "greek", "cyrillic", "hscale", "vscale", "shear", "thickness", "dx", "line_type"});
	}
	public static class ByReference extends CvFont implements Structure.ByReference {
		
	};
	public static class ByValue extends CvFont implements Structure.ByValue {
		
	};
}
